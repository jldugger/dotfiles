CREATE TABLE info (    name	TEXT,    value	TEXT,    PRIMARY KEY (name) );
CREATE TABLE items (   title		TEXT,   read		INTEGER,   new		INTEGER,   updated		INTEGER,   popup		INTEGER,   marked		INTEGER,   source		TEXT,   source_id		TEXT,   valid_guid		INTEGER,   real_source_url	TEXT,   real_source_title	TEXT,   description	TEXT,   date		INTEGER,   comment_feed_id	INTEGER,   comment            INTEGER);
CREATE TABLE itemsets (   item_id		INTEGER,   parent_item_id     INTEGER,   node_id		TEXT,   parent_node_id     TEXT,   read		INTEGER,   comment            INTEGER,   PRIMARY KEY (item_id, node_id));
CREATE TABLE metadata (   item_id		INTEGER,   nr              	INTEGER,   key             	TEXT,   value           	TEXT,   PRIMARY KEY (item_id, nr));
CREATE TABLE node (   node_id		STRING,   parent_id		STRING,   title		STRING,   type		INTEGER,   expanded           INTEGER,   view_mode		INTEGER,   sort_column	INTEGER,   sort_reversed	INTEGER,   PRIMARY KEY (node_id));
CREATE TABLE subscription (   node_id            STRING,   source             STRING,   orig_source        STRING,   filter_cmd         STRING,   update_interval	INTEGER,   default_interval   INTEGER,   discontinued       INTEGER,   available          INTEGER,   PRIMARY KEY (node_id));
CREATE TABLE subscription_metadata (   node_id            STRING,   nr                 INTEGER,   key                TEXT,   value              TEXT,   PRIMARY KEY (node_id, nr));
CREATE TABLE update_state (   node_id            STRING,   last_modified      STRING,   etag               STRING,   last_update        INTEGER,   last_favicon_update INTEGER,   PRIMARY KEY (node_id));
CREATE TABLE view_state (   node_id            STRING,   unread             INTEGER,   count              INTEGER,   PRIMARY KEY (node_id));
CREATE VIEW view_brpaxhw AS SELECT items.ROWID AS item_id,items.read AS item_read FROM items   WHERE (items.marked = 1) AND items.comment != 1;
CREATE VIEW view_gftkomc AS SELECT items.ROWID AS item_id,items.read AS item_read FROM items   WHERE (items.read = 0) AND items.comment != 1;
CREATE INDEX items_idx ON items (source_id);
CREATE INDEX items_idx2 ON items (comment_feed_id);
CREATE INDEX itemset_idx  ON itemsets (node_id);
CREATE INDEX itemset_idx2 ON itemsets (item_id);
CREATE INDEX metadata_idx ON metadata (item_id);
CREATE INDEX node_idx ON node (node_id);
CREATE INDEX subscription_metadata_idx ON subscription_metadata (node_id);
CREATE TRIGGER item_insert INSERT ON items BEGIN    UPDATE itemsets SET read = new.read    WHERE item_id = new.ROWID; END;
CREATE TRIGGER item_removal DELETE ON itemsets BEGIN    DELETE FROM items WHERE ROWID = old.item_id;    DELETE FROM metadata WHERE item_id = old.item_id; END;
CREATE TRIGGER item_update UPDATE ON items BEGIN    UPDATE itemsets SET read = new.read    WHERE item_id = new.ROWID; END;
CREATE TRIGGER subscription_removal DELETE ON subscription BEGIN    DELETE FROM node WHERE node_id = old.node_id;    DELETE FROM update_state WHERE node_id = old.node_id;    DELETE FROM subscription_metadata WHERE node_id = old.node_id; END;
CREATE TRIGGER view_brpaxhw_delete BEFORE DELETE ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'brpaxhw') -      (SELECT count(*) FROM view_brpaxhw WHERE item_id = old.ROWID)   ) WHERE node_id = 'brpaxhw';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'brpaxhw') -      (SELECT count(*) FROM view_brpaxhw WHERE item_id = old.ROWID AND item_read = 0)   ) WHERE node_id = 'brpaxhw';END;
CREATE TRIGGER view_brpaxhw_insert_after AFTER INSERT ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'brpaxhw') +      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID)   ) WHERE node_id = 'brpaxhw';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'brpaxhw') +      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'brpaxhw';END;
CREATE TRIGGER view_brpaxhw_insert_before BEFORE INSERT ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'brpaxhw') -      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID)   ) WHERE node_id = 'brpaxhw';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'brpaxhw') -      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'brpaxhw';END;
CREATE TRIGGER view_brpaxhw_update_after AFTER UPDATE ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'brpaxhw') +      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID)   ) WHERE node_id = 'brpaxhw';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'brpaxhw') +      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'brpaxhw';END;
CREATE TRIGGER view_brpaxhw_update_before BEFORE UPDATE ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'brpaxhw') -      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID)   ) WHERE node_id = 'brpaxhw';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'brpaxhw') -      (SELECT count(*) FROM view_brpaxhw WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'brpaxhw';END;
CREATE TRIGGER view_gftkomc_delete BEFORE DELETE ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'gftkomc') -      (SELECT count(*) FROM view_gftkomc WHERE item_id = old.ROWID)   ) WHERE node_id = 'gftkomc';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'gftkomc') -      (SELECT count(*) FROM view_gftkomc WHERE item_id = old.ROWID AND item_read = 0)   ) WHERE node_id = 'gftkomc';END;
CREATE TRIGGER view_gftkomc_insert_after AFTER INSERT ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'gftkomc') +      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID)   ) WHERE node_id = 'gftkomc';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'gftkomc') +      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'gftkomc';END;
CREATE TRIGGER view_gftkomc_insert_before BEFORE INSERT ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'gftkomc') -      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID)   ) WHERE node_id = 'gftkomc';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'gftkomc') -      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'gftkomc';END;
CREATE TRIGGER view_gftkomc_update_after AFTER UPDATE ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'gftkomc') +      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID)   ) WHERE node_id = 'gftkomc';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'gftkomc') +      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'gftkomc';END;
CREATE TRIGGER view_gftkomc_update_before BEFORE UPDATE ON items BEGIN   UPDATE view_state SET count = (      (SELECT count FROM view_state WHERE node_id = 'gftkomc') -      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID)   ) WHERE node_id = 'gftkomc';   UPDATE view_state SET unread = (      (SELECT unread FROM view_state WHERE node_id = 'gftkomc') -      (SELECT count(*) FROM view_gftkomc WHERE item_id = new.ROWID AND item_read = 0)   ) WHERE node_id = 'gftkomc';END;
